{
    "en": {
        "t1": "Cypher Query",
        "t2": "On the Write queries page, we enter a Cypher statement",
        "t3": "Query the actor Hugo Weaving, and he will be displayed on the page.",
        "t4": "Place the mouse on this vertex, and you can see the attributes related to this vertex, such as his date of birth, vertex id in the graph, name, etc.",
        "t5": "Double-click the vertex, this vertex will be expanded, showing other vertices related to him, we can see that these vertices are the movies he participated in. The position of the screen can be adjusted by dragging and the mouse wheel.",
        "t6": "We double-click on a movie, and more vertices of different colors appear. Different colors represent different types of vertices. The edges between different vertices represent the relationship between vertices. TuGraph supports a variety of relationship types, such as playing relationships. The relationship between ratings, the relationship between video types, and so on.",
        "t7": "TuGraph also supports color modification, icon size, and other personalized functions. Just select a model and select it here. There are more functions in the upper right menu bar, such as merging or expanding multiple edges, data editing, fixed layout, hovering highlight, export, refresh, full screen and other functions.",
        "t8": "In addition to visual viewing methods, TuGraph's returned data also supports table and text viewing methods.",
        "t9": "We can also bookmark this Cypher statement. After the collection is successful, you can see this statement in the favorites folder to facilitate the next call.",
        "t10": "Cypher statement query example:",
        "t11": "Query all the actors in the movie\"Forrest Gump\", and return the sub-picture of the movie and the actors.",
        "t12": "Query all actors in the movie\"Forrest Gump\", and list the roles the actors play in the movie.",
        "t13": "Look up all Michael’s videos with a score below 3.",
        "t14": "For users who have the same disliked videos as Michael, the dislike standard is less than three points.",
        "t15": "Recommend videos to Michael by first finding out users who hate the same videos as Michael, and then filtering out the videos that users like.",
        "t16": "Find videos that Michael's friends like.",
        "t17": "By querying which videos the people who gave high scores to\"Forrest Gump\" also like, recommend similar videos to users who like\"Forrest Gump\".",
        "t18": "TuGraph supports online editing functions",
        "t19": "Query a Cypher statement. Open the edit mode, select the model you want to modify, and the table will load all the data of the corresponding model on the graph.",
        "t20": "First, we create two vertices, enter the corresponding fields, click Save, and the two vertices are created successfully.",
        "t21": "Next, we modify these two vertices and fill in the fields again. We see that these two vertices have been modified successfully.",
        "t22": "Next, we create an edge. First select the model of the edge, click to add an edge, then click the cell at the starting point, then click the vertex on the graph, the virtual id of the vertex is automatically filled in the table, and then click the cell at the end point , Click another vertex on the graph, the virtual id of the other vertex will be automatically filled in the table, click save, an edge will be created successfully.",
        "t23": "The start and end points of an edge cannot be modified, other attributes can be modified.",
        "t24": "Then delete this edge, select this edge in the table, click Delete, and the deletion is successful.",
        "t25": "Finally, to delete these two vertices, first select the model of these two points, select these two points in the table, click delete, and the deletion is successful. (Delete two related points, their edges will be deleted automatically)",
        "t26": "Movie Demo",
        "t27": "Covid Demo",
        "t28": "Check the confirmed personnel '焦明 '",
        "t29": "Close contacts of the confirmed personnel '焦明' ",
        "t30": "To inquire about the place visited by '张红', the person in close contact with '焦明' ",
        "t31": "Query all persons who have been to '赵路Y座 424857'"
    },
    "zh": {
        "t1": "查询",
        "t2": "在查询页面，我们输入一个Cypher语句",
        "t3": "查询Hugo Weaving这个演员，他就在页面中呈现出来了。",
        "t4": "把鼠标放在这个顶点上，就可以看到这个顶点相关的属性，比如他的出生日期，在图中的顶点id，名字等等。",
        "t5": "双击顶点，这个顶点会被展开，显示出与他有关联的其他顶点，我们可以看到这些顶点是他参演过的电影。可以通过拖拽和鼠标滚轮来调整画面的位置。",
        "t6": "我们双击一个电影，出现了更多不同颜色的顶点，不同的颜色代表不同的顶点类型，不同顶点之间的边代表顶点之间的关系，TuGraph支持多种多样的关系类型，比如扮演的关系，评分的关系，影片类型的关系等等。",
        "t7": "TuGraph还支持颜色修改，图标大小，等个性化功能，只需要选中某个模型，在这里选择即可。在右上角菜单栏还有更多的功能，如合并或展开多条边，数据的编辑，固定布局，悬停高亮，导出，刷新，全屏等功能。",
        "t8": "除了可视化的查看方式之外，TuGraph的返回数据还支持表格和文本的查看方式。",
        "t9": "我们还可以收藏这个Cypher语句，收藏成功之后可以在收藏夹中看到这个语句，方便下次调用。",
        "t10": "Cypher语句查询示例：",
        "t11": "查询影片 'Forrest Gump' 的所有演员，返回影片和演员构成的子图。",
        "t12": "查询影片 'Forrest Gump' 的所有演员，列出演员在影片中扮演的角色。",
        "t13": "查询 Michael 所有评分低于 3 分的影片。",
        "t14": "查询和 Michael 有相同讨厌的影片的用户，讨厌标准为评分小于三分。",
        "t15": "给Michael推荐影片，方法为先找出和Michael讨厌同样影片的用户，再筛选出这部分用户喜欢的影片。",
        "t16": "查询 Michael 的好友们喜欢的影片。",
        "t17": "通过查询给'Forrest Gump'打高分的人也喜欢哪些影片，给喜欢'Forrest Gump'的用户推荐类似的影片。",
        "t18": "TuGraph支持在线编辑功能",
        "t19": "查询一条Cypher语句。打开编辑模式，选择想要修改的模型，表格中就会加载出图上所有对应模型的数据。",
        "t20": "首先我们创建两个顶点，输入相应字段，点击保存，这两个顶点就创建成功了。",
        "t21": "接下来我们修改这两个顶点，重新填写字段，我们看到这两个顶点修改成功。",
        "t22": "接下来我们创建一条边，首先选择边的模型，点击添加边，然后点击起点的单元格，再点一下图上的顶点，顶点的虚拟id就自动填入表格中了，再点击终点的单元格，点击图上的另一个顶点，另一个顶点的虚拟id就自动填入表格中了，点击保存，一条边就创建成功了。",
        "t23": "边的起点和终点是不可以修改的，其他属性可以修改。",
        "t24": "然后删除这条边，在表格中选中这条边，点击删除，删除成功。",
        "t25": "最后删除这两个顶点，先要选择这两个点的模型，在表格中选中这两个点，点击删除，删除成功。（删除两个有关系的点，他们的边会自动删除）",
        "t26": "Movie 示例语句",
        "t27": "Covid 示例语句",
        "t28": "查询确诊人员'焦明'",
        "t29": "查询确诊人员'焦明'的密切接触人员",
        "t30": "查询与'焦明'密接的人员'张红'所去过的地方",
        "t31": "查询所有去过'赵路Y座 424857'的人员"
    }
}
