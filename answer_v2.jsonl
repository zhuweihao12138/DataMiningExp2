{"id": "TEST1-1", "input_field": "在添加边时，如果指定的值不包含在value_dict中将如何处理？", "output_field": "视为null"}
{"id": "TEST1-2", "input_field": "在使用LIMIT子句时，如果查询数据库中前两个人的名字，返回的名字是什么？", "output_field": "Christopher Nolan, Corin Redgrave"}
{"id": "TEST1-3", "input_field": "如何查询数据库中现有角色及其相关信息？", "output_field": "使用GET方法请求/role，需提供Authorization头部。参数包括：\n- URI: /role\n- METHOD: GET\n- Authorization: Bearer <token>"}
{"id": "TEST1-4", "input_field": "tugraph可以最多创建多少点边和点边上最多创建多少属性？", "output_field": "每个图项目最多存储2^40个点，两个点之间最多存储2^32条边。每个点或边类型下最多可以有1024个属性。"}
{"id": "TEST1-5", "input_field": "我下载了4.3.2镜像，启动成功了，进入容器后没有 setup.sh 脚本是改变目录了吗？", "output_field": "没有setup.sh脚本是因为你可能需要手动启动服务。尝试执行以下命令启动服务：\nlgraph_server -c /usr/local/etc/lgraph.json -d start"}
{"id": "TEST1-6", "input_field": "lgraph_server -d start的方式启动，不是会在pwd路径下生成pid文件吗？这个pid文件有参数能控制路径吗？", "output_field": "没有参数能直接控制pid文件的路径，它默认生成在启动命令的工作目录下。"}
{"id": "TEST1-7", "input_field": "如果在使用ARM机器（如M1芯片的Mac）编译TuGraph，应该如何修改cmake命令？", "output_field": "在cmake命令后加上-DENABLE_BUILD_ON_AARCH64=ON"}
{"id": "TEST1-8", "input_field": "启动参数中cleanup_dir指定的目录用于执行什么操作？", "output_field": "cleanup_dir指定的目录用于在函数执行完成后进行清理。"}
{"id": "TEST1-9", "input_field": "使用什么命令来启动 TuGraph？", "output_field": "./lgraph_server -c lgraph.json --log_dir \"\""}
{"id": "TEST1-10", "input_field": "TuGraph团队为了提高解析速度所进行的优化包括了哪些主要手段？", "output_field": "TuGraph为提高解析速度进行的优化包括：采用紧凑编码保证读性能，使用自适应映射技术解决单边更新时重编码开销。此外，通过Procedure API提供更直接的数据访问方式，减少从查询到执行计划生成过程中的性能损失。"}
{"id": "TEST1-11", "input_field": "当中止一个正在执行的任务时，应该使用哪种HTTP请求方法？", "output_field": "DELETE"}
{"id": "TEST1-12", "input_field": "AllocVertexSubset函数用来做什么？", "output_field": "分配一个ParallelBitset集合，用于表示所有点的状态是否激活。"}
{"id": "TEST1-13", "input_field": "web端导入10G数据报错", "output_field": "检查以下几点：\n- 确保label存在并有适当索引。\n- 数据分隔符正确，不包含\\r或\\n。\n- 单个请求数据大小不超过17MB。\n- 继续出错后导入设置为true时忽略错误行。"}
{"id": "TEST1-14", "input_field": "TuGraph支持的导出格式？", "output_field": "CSV, JSON"}
{"id": "TEST1-15", "input_field": "TuGraph的调优，除了语句前加EXPLAIN和PROFILE还有没有别的方式", "output_field": "可以通过调整RPC线程池容量、分析线程池大小，以及利用高可用部署或外部任务调度器来优化性能。"}
{"id": "TEST1-16", "input_field": "RpcSingleClient 构造函数需要哪些参数？", "output_field": "url, user, pass"}
{"id": "TEST1-17", "input_field": "Cython是如何导入与Olap相关的模块和图数据库模块的？", "output_field": "导入Olap相关模块：\n```python\nfrom cython.cimports.olap_base import *\n```\n导入图数据库模块：\n```python\nfrom cython.cimports.lgraph_db import *\n```"}
{"id": "TEST1-18", "input_field": "在调用db.addEdgeIndex时，'unique'参数和'pair_unique'参数有何不同？", "output_field": "unique参数指定索引是否唯一，pair_unique参数指定索引在两个顶点之间是否唯一。"}
{"id": "TEST1-19", "input_field": "图数据库相比于关系型数据库有什么优势？", "output_field": "图数据库相比关系型数据库的优势包括：\n- 性能更高，尤其在处理关联关系时\n- 更好的兼容性，适应数据和格式变化\n- 直观性更强，自然表达现实世界的关系"}
{"id": "TEST1-20", "input_field": "在创建节点的时候，报错：message: Vertex unique index value [xxx] is too long，是属性值太长了吗？", "output_field": "是的，属性值太长了。"}
{"id": "TEST1-21", "input_field": "使用 GET 方法获取具体边属性时，如果边不存在该属性，会返回什么错误代码？", "output_field": "400\nIllegal field."}
{"id": "TEST1-22", "input_field": "TuGraph针对不同用户的需求提供了哪些类型的系统环境？", "output_field": "编译环境、运行环境、精简运行环境。"}
{"id": "TEST1-23", "input_field": "TuGraph-DB新增支持的空间数据类型有哪些？", "output_field": "POINT, LINESTRING, POLYGON"}
{"id": "TEST1-24", "input_field": "在CREATE LABEL命令中，如果要创建一个顶点标签，主要属性名称应该由哪个参数确定？", "output_field": "primary_field"}
{"id": "TEST1-25", "input_field": "在HA模式下，client可以向谁发送导入点边数据请求？", "output_field": "leader"}
{"id": "TEST1-26", "input_field": "在只读事务中调用 SetFields 方法会抛出什么异常？", "output_field": "在只读事务中调用 SetFields 方法会抛出 std::exception 异常。"}
{"id": "TEST1-27", "input_field": "GetVertexIndexIterator函数在liblgraph_python_api.Transaction中用于获取什么类型的迭代器？", "output_field": "VertexIndexIterator"}
{"id": "TEST1-28", "input_field": "db.importor.dataImportor 函数在导入数据时是否可以指定错误继续执行和线程数？", "output_field": "可以，参数包括：\n- continue_on_error\n- thread_nums"}
{"id": "TEST1-29", "input_field": "在尝试读取一个已完成索引构建的顶点时，应该使用哪个函数？", "output_field": "GetVertexIterator"}
{"id": "TEST1-30", "input_field": "在调用函数DeleteGraph时，如果操作未被授权会抛出什么异常？", "output_field": "Unauthorized"}
{"id": "TEST1-31", "input_field": "在初始化每个节点的pagerank值时，当节点的出度大于0，pagerank值是如何计算的？", "output_field": "初始化时，如果节点的出度大于0，该节点的pagerank值计算方式为：`one_over_n / olapondb.OutDegree(vi)`。其中`one_over_n`是1除以总节点数的结果。"}
{"id": "TEST1-32", "input_field": "TuGraph 支持哪些数据导出格式？", "output_field": "CSV, JSON"}
{"id": "TEST1-33", "input_field": "启动TuGraph的时候报这个错误：0x00007f7e5f272900 FATAL include/fma-common/binary_buffer.h:289] CHECK(gpos_ + size <= ppos_)      failedreading beyond the array: required size=4, actual size=2", "output_field": "该错误表明在读取二进制缓冲区时，尝试读取的数据超出了实际可用的数据大小。检查相关代码中对BinaryBuffer的读写操作，确保写入和读取的数据大小一致。此外，请确认数据源没有损坏或被截断。"}
{"id": "TEST1-34", "input_field": "如果在FrontierTraversal中开启了TRAVERSAL_PARALLEL标志，事务必须是怎样的？", "output_field": "事务必须是只读的。"}
{"id": "TEST1-35", "input_field": "使用 CSV 文件导入数据时，文件中的栏位与配置文件中的 columns 如何对应？", "output_field": "文件中的每一列按照顺序与配置文件中columns字段列出的属性名一一对应。"}
{"id": "TEST1-36", "input_field": "在创建一个顶点标签时，需要指定哪些参数？", "output_field": "label_name, primary_field, field_spec"}
{"id": "TEST1-37", "input_field": "TuGraph Browser 的默认端口号是什么？", "output_field": "7070"}
{"id": "TEST1-38", "input_field": "在配置中，用于计算图表中显示的值的方法是什么？", "output_field": "配置类中用于计算图表显示值的方法是Print函数。"}
{"id": "TEST1-39", "input_field": "TuGraph是由哪个团队开发的？", "output_field": "TuGraph由蚂蚁集团与清华大学联合研发。"}
{"id": "TEST1-40", "input_field": "图学习系统是解决什么问题的？", "output_field": "图学习系统解决图学习问题，例如预测、分类等。"}
{"id": "TEST1-41", "input_field": "VertexIterator GetVertexByUniqueCompositeIndex函数需要哪些参数？", "output_field": "label_name, field_name, field_value_string\n或\nlabel_id, field_id, field_value"}
{"id": "TEST1-42", "input_field": "rpc port怎么配置？", "output_field": "配置rpc_port参数，设置所需端口号。"}
{"id": "TEST1-43", "input_field": "图数据库在处理关联关系时相比关系型数据库有什么优势？", "output_field": "图数据库在处理关联关系时，直接跳转访问类指针，效率更高，性能比关系型数据库提高2到4个数量级。关系型数据库需要使用表的JOIN操作，对性能影响较大。"}
{"id": "TEST1-44", "input_field": "使用TuGraph Browser时，默认的登录密码是什么？", "output_field": "73@TuGraph"}
{"id": "TEST1-45", "input_field": "SetFields函数的第一个版本中，field_value_strings参数的数据类型是什么？", "output_field": "std::vector<std::string>"}
{"id": "TEST1-46", "input_field": "DB和tuGraph Analytics是独立运行吗？", "output_field": "是的，TuGraph数据库和TuGraph图分析引擎可以独立运行。"}
{"id": "TEST1-47", "input_field": "RpcClient 构造函数需要什么参数用于用户登录？", "output_field": "user, pass"}
{"id": "TEST1-48", "input_field": "如何使用lgraph_cypher工具在命令行中以单命令模式提交一条Cypher查询并保存结果？", "output_field": "使用以下命令：\n```\n./lgraph_cypher.py -c 配置文件路径 -u 用户名 -P 密码 -s \"Cypher查询\" > 保存结果的文件路径\n```"}
{"id": "TEST1-49", "input_field": "数据和日志目录的持久化位置在哪里？", "output_field": "数据和日志目录的持久化位置在宿主机的/root/tugraph/上。"}
{"id": "TEST1-50", "input_field": "TuGraph 的 Traversal API 当中对于遍历的起始点设置有哪三种方式？", "output_field": "通过点ID直接指定\n使用SetFrontier方法结合过滤函数指定"}
{"id": "TEST1-51", "input_field": "方法 `SetField` 的目的是什么？", "output_field": "设置指定字段。"}
{"id": "TEST1-52", "input_field": "TuGraph-DB图数据库是由哪个团队开发的？", "output_field": "TuGraph-DB图数据库由蚂蚁集团与清华大学联合研发。"}
{"id": "TEST1-53", "input_field": "TuGraph 的精简运行环境需要哪些系统库？", "output_field": "精简运行环境不需要安装任何依赖库。"}
{"id": "TEST1-54", "input_field": "函数 SetFrontier(std::function<bool(VertexIterator&)> root_vertex_filter) 是如何利用参数 root_vertex_filter 的？", "output_field": "遍历所有顶点，使用 root_vertex_filter 过滤出符合条件的起始顶点，并将这些顶点加入当前层的集合。"}
{"id": "TEST1-55", "input_field": "rpm包中包含新版前端页面资源吗？", "output_field": "包含，新版本是默认选项。可以通过修改配置文件\"/usr/local/etc/lgraph.json\"中的\"web\"参数选择使用老版本或新版本前端。"}
{"id": "TEST1-56", "input_field": "请问一下镜像 tugraph-runtime-centos7启动大概需要多少资源", "output_field": "硬件最低配置建议：\n- CPU: X86_64\n- 内存: 4GB\n- 硬盘: 100GB\n- 操作系统: Linux 2.6\n\n建议配置：\n- CPU: Xeon E5 2670 v4\n- 内存: 256GB\n- 硬盘: 1TB NVMe SSD\n- 操作系统: Ubuntu 18.04, CentOS 7.3"}
{"id": "TEST1-57", "input_field": "当创建组合索引时，需要提供哪些参数？", "output_field": "label_name, field_names, unique"}
{"id": "TEST1-58", "input_field": "函数 `SetField` 抛出的异常之一是什么？", "output_field": "std::exception"}
{"id": "TEST1-59", "input_field": "TuGraphClient是什么？", "output_field": "TuGraphClient是TuGraph的Python SDK，用于与TuGraph数据库进行交互。"}
{"id": "TEST1-60", "input_field": "TuGraph 支持哪些类型的硬件平台？", "output_field": "X86_64, ARM64 架构，包括 Intel、AMD、Kunpeng、Hygon、飞腾等。"}
{"id": "TEST1-61", "input_field": "我想问一下字节流导入点边数据的api：boolean ret = client.importDataFromContent(personDesc, person, \",\", true, 16, \"default\", 1000);前两个参数的格式，是不是和执行导入脚本一样", "output_field": "desc, data\n这两个参数的格式需符合数据导入的要求，其中desc描述了data的数据格式。它们的具体格式并不一定和执行导入脚本完全一样，但目的都是为了准确描述和提供待导入的数据。"}
{"id": "TEST1-62", "input_field": "什么标签和属性用于表示OGM中类的映射为一个边类型？", "output_field": "标签使用label表示，属性映射到边的属性字段。类中的集合映射为边。"}
{"id": "TEST1-63", "input_field": "如果在对 DateTime 对象使用 operator+= 或 operator-= 运算时发生溢出，会如何处理？", "output_field": "在对 DateTime 对象使用 `operator+=` 或 `operator-=` 运算时，如果发生溢出，会调用 `CheckDateTimeOverflow` 函数来检查并处理。"}
{"id": "TEST1-64", "input_field": "AlterEdgeLabelAddFields函数成功执行的条件是什么？", "output_field": "函数成功执行的条件是：指定的标签存在，且能够正确添加字段及其默认值到该标签。"}
{"id": "TEST1-65", "input_field": "带权图的边权重是什么类型的数值？", "output_field": "带权图的边权重可以是int或double类型。"}
{"id": "TEST1-66", "input_field": "RPC 是一种如何工作的通信协议？", "output_field": "RPC通过网络从远程计算机程序上请求服务，面向方法，主要用于函数方法的调用。"}
{"id": "TEST1-67", "input_field": "TuGraph中主键的作用是什么？", "output_field": "主键是用户自定义的点数据唯一标识，默认为唯一索引，在对应的点类型中保证唯一性。"}
{"id": "TEST1-68", "input_field": "RpcException是什么类型的异常？", "output_field": "RpcException是public std::exception类型的异常。"}
{"id": "TEST1-69", "input_field": "match语句中是否支持set多个属性", "output_field": "支持"}
{"id": "TEST1-70", "input_field": "TuGraph DB关于Antlr4改进了哪些性能方面的内容？", "output_field": "知识库中没有提到TuGraph DB关于Antlr4的具体性能改进内容。"}
{"id": "TEST1-71", "input_field": "TuGraph 和 OpenCypher 在处理节点和关系的标签数量上有什么不同？", "output_field": "TuGraph 每个节点/关系必须有且只有一个标签。如果没有标签或者有多个标签时，将选择第一个标签。\nOpenCypher 每个节点/关系可以有0到多个标签。"}
{"id": "TEST1-72", "input_field": "函数DeleteVertexIndex成功执行时返回什么值？", "output_field": "返回true。"}
{"id": "TEST1-73", "input_field": "现在tugraph-analytics是不支持窗口函数吗？", "output_field": "是的，TuGraph-analytics当前不支持窗口函数。"}
{"id": "TEST1-74", "input_field": "当调用CallProcedure函数时，如果设置json_format参数为false，返回的结果格式是什么？", "output_field": "字符串格式"}
{"id": "TEST1-75", "input_field": "在 PathTraversal 类中，通过调用哪个函数来通过传入的过滤器设置初始边界？", "output_field": "SetFrontier(std::function<bool(VertexIterator &)> root_vertex_filter)"}
{"id": "TEST1-76", "input_field": "GeaBase的主要部署方式需要多长时间？", "output_field": "创建服务实例后，部署时间大约需要2分钟。"}
{"id": "TEST1-77", "input_field": "在图论中，图的基本元素包括哪些？", "output_field": "点和边"}
{"id": "TEST1-78", "input_field": "TuGraph支持哪些编程语言？", "output_field": "C++、Python、Rust、Java"}
{"id": "TEST1-79", "input_field": "在这段代码中，如何获取存储过程响应的列表？", "output_field": "使用GET方法请求URI: /db/{graph_name}/cpp_plugin或/db/{graph_name}/python_plugin，参数为graph_name。"}
{"id": "TEST1-80", "input_field": "什么是RPC接口？", "output_field": "RPC接口是一种通过网络从远程计算机程序上请求服务的协议，主要用于函数方法的调用，适合复杂通信需求场景，性能高。"}
{"id": "TEST1-81", "input_field": "在文本中，The Matrix参与了哪几种类型的关系？", "output_field": "acted_in, directed, produced"}
{"id": "TEST1-82", "input_field": "使用什么命令启动 TuGraph 服务器？", "output_field": "./lgraph_server -d start -c lgraph.json"}
{"id": "TEST1-83", "input_field": "如果在添加顶点时存在相同的unique_id，将会发生什么？", "output_field": "抛出InputError异常，提示发现重复的顶点键值。"}
{"id": "TEST1-84", "input_field": "TuGraph 支持哪些硬件架构？", "output_field": "X86_64, ARM64"}
{"id": "TEST1-85", "input_field": "TuGraph-OGM项目如何面向TuGraph数据库支持JAVA开发人员进行图对象映射？", "output_field": "TuGraph-OGM将JAVA对象映射到TuGraph中，类映射为节点、集合映射为边、属性映射为图对象属性，并提供函数操作图数据库。"}
{"id": "TEST1-86", "input_field": "OPTIONAL MATCH在GQL中有什么作用？", "output_field": "OPTIONAL MATCH尝试匹配图模式，如果未命中则返回null。"}
{"id": "TEST1-87", "input_field": "loadProcedure方法中，如何通过参数控制存储过程是否为只读？", "output_field": "readOnly参数控制存储过程是否为只读。"}
{"id": "TEST1-88", "input_field": "在RPC调用中，如果回应的错误码不是成功，则抛出的异常类型是什么？", "output_field": "RpcStatusException"}
{"id": "TEST1-89", "input_field": "Transform操作中的swap_id函数是用来做什么的？", "output_field": "swap_id函数用于交换两个ID。"}
{"id": "TEST1-90", "input_field": "在影视场景Demo中，如何通过Cypher语言查询影片'Forrest Gump'的所有演员以及他们扮演的角色？", "output_field": "MATCH (m:movie {title: 'Forrest Gump'})<-[r:acted_in]-(a:person) RETURN a.name, r.role"}
{"id": "TEST1-91", "input_field": "TuGraph-DB图数据库社区版内置了多少种基础算法？", "output_field": "6种"}
{"id": "TEST1-92", "input_field": "TuGraph-DB支持的三种空间数据类型是什么？", "output_field": "Point, Linestring, Polygon"}
{"id": "TEST1-93", "input_field": "产品是否支持麒麟操作系统？只有企业版支持么？", "output_field": "TuGraph支持银河麒麟操作系统，这不是仅企业版支持的特性。"}
{"id": "TEST1-94", "input_field": "TuGraph-DB中存储Point类型数据的格式是什么？", "output_field": "EWKB格式数据，表示点。例如：point(2.0, 2.0, 7203)"}
{"id": "TEST1-95", "input_field": "TuGraph嵌入模式的API允许用户执行哪些操作？", "output_field": "TuGraph嵌入模式的API允许用户执行点操作、边操作、Label相关操作、索引相关操作、子图相关的Cypher操作、C++存储过程、Python存储过程、在线导入以及其他操作。"}
{"id": "TEST1-96", "input_field": "Date 类的默认构造函数设置的日期是什么？", "output_field": "0"}
{"id": "TEST1-97", "input_field": "在使用 bool DeleteVertexIndex 函数时，如果给定的 vertex_label 或 field 不存在会发生什么？", "output_field": "函数返回false，并且响应中会包含\"VertexIndex [label:field] does not exists.\"的信息。"}
{"id": "TEST1-98", "input_field": "在单命令模式下，如何使用 lgraph_cypher 通过命令行参数来执行一条 Cypher 查询并将结果显示为表格格式？", "output_field": "-c 配置文件路径 -u 用户名 -P 密码 -s \"Cypher 查询\" -format table"}
{"id": "TEST1-99", "input_field": "reduce_plus函数是如何处理它的两个参数的？", "output_field": "reduce_plus函数将它的两个参数相加。"}
{"id": "TEST1-100", "input_field": "是否支持无向边", "output_field": "支持，通过创建两个方向相反的边来模拟无向边。"}
{"id": "TEST1-101", "input_field": "FieldData类中提供哪些构造函数来初始化不同类型的数据？", "output_field": "FieldData类提供了以下构造函数来初始化不同类型的数据：\n- 接受整数的构造函数\n- 接受浮点数的构造函数\n- 接受字符串的构造函数\n- 接受布尔值的构造函数"}
{"id": "TEST1-102", "input_field": "TuGraph-DB是如何帮助解决旅行时选择路线的烦恼的？", "output_field": "TuGraph-DB通过Round The World Demo，基于部分公开历史航班数据，帮助用户设计多个城市的最优航班规划。用户可以选择不超过8个城市查询，系统返回满足前后航班间隔在2-6小时要求下的费用最低和飞行时间最短的10条路径规划。"}
{"id": "TEST1-103", "input_field": "exists()函数用于检查什么？", "output_field": "exists()函数用于检查顶点或边是否具有某个字段。"}
{"id": "TEST1-104", "input_field": "安装部署TuGraph硬件的最低和建议CPU配置分别是多少个核心？", "output_field": "最低配置未明确指出核心数，建议配置为Xeon E5 2670 v4。"}
{"id": "TEST1-105", "input_field": "MappedVid 函数是用于什么目的？", "output_field": "获取OlapOnDB中节点对应TuGraph的节点编号"}
{"id": "TEST1-106", "input_field": "当尝试更新一个存在的边但标签与指定的不符时，会发生什么？", "output_field": "不会更新该边，因为标签不符。"}
{"id": "TEST1-107", "input_field": "批量在线导入是通过”CREATE (n), (m)“吗？", "output_field": "不是，批量在线导入通常使用特定的API或函数，如RESTful API /db/{graph_name}/import/text，而非Cypher语句。"}
{"id": "TEST1-108", "input_field": "lgraph_backup工具的主要功能是什么？", "output_field": "lgraph_backup工具的主要功能是将TuGraph数据库中的数据备份到另一个目录下。"}
{"id": "TEST1-109", "input_field": "在获取某个节点的所有属性时，通过什么方法和URI可以实现？", "output_field": "METHOD: GET\nURI: /db/{graph_name}/node/{vertex_id}/property"}
{"id": "TEST1-110", "input_field": "知识图谱的基本元素包括哪些？", "output_field": "点和边"}
{"id": "TEST1-111", "input_field": "TuGraph-DB是否支持存储过程？支持哪些编程语言的存储过程？", "output_field": "支持。支持C++、Python和Rust语言。"}
{"id": "TEST1-112", "input_field": "GetEdgeProp操作的目的是什么？", "output_field": "获取当前边的属性。"}
{"id": "TEST1-113", "input_field": "TuGraph-DB的主要功能是什么？", "output_field": "- 标签属性图模型\n- 完善的ACID事务处理\n- 内置34种图分析算法\n- 支持全文/主键/二级索引\n- OpenCypher图查询语言\n- 基于C++/Python的存储过程"}
{"id": "TEST1-114", "input_field": "当Cypher请求的响应不包含正确的结果时，会抛出什么异常？", "output_field": "RpcStatusException"}
{"id": "TEST1-115", "input_field": "2024年度功能更新预计何时推出HA支持Witness角色和管理工具？", "output_field": "2024.3"}
{"id": "TEST1-116", "input_field": "TuGraph-DB使用CMake作为编译工具，支持的C++标准为C++17", "output_field": "TuGraph-DB使用CMake作为编译工具，支持的C++标准为C++17。"}
{"id": "TEST1-117", "input_field": "Cython.cimports.libcpp.unordered_map是什么？", "output_field": "Cython.cimports.libcpp.unordered_map是用于从C++标准库导入unordered_map容器到Cython代码中的模块。"}
{"id": "TEST1-118", "input_field": "TuGraph 数据预热命令需要指定哪两个选项？", "output_field": "-d, -g"}
{"id": "TEST1-119", "input_field": "是否支持GQL语句？", "output_field": "支持GQL语句。"}
{"id": "TEST1-120", "input_field": "在配置中提到的“log4j-core”和“guava”的版本号分别是多少？", "output_field": "提供的信息中没有提到“log4j-core”和“guava”的具体版本号。"}
{"id": "TEST1-121", "input_field": "类liblgraph_python_api.Galaxy的方法SetUserGraphAccess主要用于什么？", "output_field": "设置指定用户对某个图的访问级别。"}
{"id": "TEST1-122", "input_field": "TuGraph-DB如何在运行单元测试的过程中输出日志？", "output_field": "使用2.2中提供的log宏输出调试信息，避免使用cout或者printf等输出方式。具体可参考如下示例：\n```cpp\n#include \"tools/lgraph_log.h\"\nvoid LogExample() {\n    LOG_DEBUG() << \"This is a debug level log message.\";\n    LOG_INFO() << \"This is a info level log message.\";\n    LOG_WARN() << \"This is a warning level log message.\";\n    LOG_ERROR() << \"This is a error level log message.\";\n}\n```"}
{"id": "TEST1-123", "input_field": "GeaBase 查询中使用 \"Nav\" 语句的一种情况是什么?", "output_field": "\"Nav\" 语句在 GeaBase 查询中用于遍历图数据库中的节点和边，根据指定的路径模式进行导航。"}
{"id": "TEST1-124", "input_field": "我要快速定位到2个顶点间的某条关系边，通过pair unique索引查找关系边的接口有么，需求是根据pair_unique的值更新对应的边数据么", "output_field": "使用pair unique索引查找边，需要指定边的类型、起点和终点的vid以及唯一属性值。更新边数据的接口为`PUT /db/{graph_name}/relationship/{euid}`，其中property参数用于更新边属性。参数包括：graph_name, euid, property。"}
{"id": "TEST1-125", "input_field": "TuGraph Explorer 的功能现在在哪里可以找到？", "output_field": "TuGraph Explorer 已经合并到 TuGraph Browser。"}
{"id": "TEST1-126", "input_field": "SybilRank算法的执行过程中主要采用什么方式来进行计算？", "output_field": "SybilRank算法从非Sybil节点开始进行提前终止的随机游走。"}
{"id": "TEST1-127", "input_field": "节点和边的属性在知识图谱中有什么作用？", "output_field": "节点和边的属性用于附加额外的信息，如员工的工号、雇佣时间等，增强图的表达能力。"}
{"id": "TEST1-128", "input_field": "在TuGraph项目中，为什么在提交代码前要先提交一个issue？", "output_field": "避免与其他开发者的工作冲突，讨论确定修改的必要性和改进空间，减少沟通成本和pull request被拒的可能性。"}
{"id": "TEST1-129", "input_field": "请问社区版本和企业版本，之间的差距在哪", "output_field": "社区版提供基础图数据库功能，支持单实例部署，适用于学习和小型项目。企业版支持分布式集群架构、全生命周期一站式图平台、多种数据源接入及专家支持服务等商业化特性。"}
{"id": "TEST1-130", "input_field": "bfs_standalone程序的输出结果是什么？", "output_field": "prepare_cost = 0.10(s)\ncore_cost = 0.02(s)\nfound_vertices = 3829\noutput_cost = 0.00(s)\ntotal_cost = 0.11(s)"}
{"id": "TEST1-131", "input_field": "Key_start和key_end相等于v时，VertexIndexIterator是如何工作的？", "output_field": "key_start=key_end=v时，VertexIndexIterator返回指向所有具有field值v的顶点的迭代器。"}
{"id": "TEST1-132", "input_field": "应该如何写入图数据库中的顶点数据？", "output_field": "使用Write方法，参数为config, array, array_size, name, filter_output。"}
{"id": "TEST1-133", "input_field": "lgraph_api::Transaction的作用是什么？", "output_field": "lgraph_api::Transaction用于在图数据库中执行读写操作，包括创建读事务或写事务。"}
{"id": "TEST1-134", "input_field": "在执行`ProcessVertexActive`函数时，如果运行时出现错误，会引发什么异常？", "output_field": "`ProcessVertexActive`函数在运行时出现错误可能引发的异常没有直接在给定文档中说明。基于提供的信息，无法确定具体会抛出哪种异常。通常情况下，如果参数类型不匹配或逻辑错误等，可能会引发C++标准库中的异常如`std::runtime_error`等。对于更具体的异常类型，需要查看/include/lgraph/olap_base.h中的实现代码。"}
{"id": "TEST1-135", "input_field": "如果在调用存储过程时，指定json_format参数为false，返回结果的格式是什么？", "output_field": "返回结果的格式是字符串。"}
{"id": "TEST1-136", "input_field": "Prometheus的地址是什么？", "output_field": "Prometheus的地址需要在Grafana的数据源设置中配置。具体IP地址取决于Prometheus安装位置。"}
{"id": "TEST1-137", "input_field": "TuGraph图分析引擎主要面向哪类任务？", "output_field": "全图/全量数据分析类的任务。"}
{"id": "TEST1-138", "input_field": "在给定的XML配置中，如果表内属性字段名为id时，应该如何处理node_id字段以避免报错？", "output_field": "配置中应使用别名区分`id`和`node_id`，如在映射文件里为`node_id`指定一个不同的属性名或通过AS关键字重命名。"}
{"id": "TEST1-139", "input_field": "使用OGM进行创建节点和边的代码示例中，哪部分代码用于创建边标签\"DIRECT\"?", "output_field": "session.query(\"CALL db.createEdgeLabel('DIRECT', '[]')\", emptyMap());"}
{"id": "TEST1-140", "input_field": "return n 和 return p.name,p.age 的数据结构不一致。 能统一返回可视化页面的这种结构么？", "output_field": "可以统一返回格式。使用别名将`n`的属性提取出来，如：\n```\nMATCH (n)\nRETURN n.name AS name, n.age AS age\n```"}
{"id": "TEST1-141", "input_field": "编译TuGraph时如何为基于ARM的机器（如Mac M1）配置CMake？", "output_field": "cmake .. -DENABLE_BUILD_ON_AARCH64=ON"}
{"id": "TEST1-142", "input_field": "单机的配置大致是什么情况？", "output_field": "单机最低配置建议：\n- CPU: 4 Cores\n- 内存: 4GB\n- 外存: 100GB\n- OS: Linux 4.9\n\n推荐配置：\n- CPU: 64 Cores\n- 内存: 512GB\n- 外存: 2TB NVMe SSD\n- OS: CentOS 7.3"}
{"id": "TEST1-143", "input_field": "如何查询两点间的一条通路？", "output_field": "algo.shortestPath(startNode, endNode, config)"}
{"id": "TEST1-144", "input_field": "tugraph 支持通过cypher 或者python的形式修改schema吗", "output_field": "支持通过Cypher修改schema。Python形式不直接支持修改schema，但可以编写存储过程间接实现。"}
{"id": "TEST1-145", "input_field": "TuGraph-Restful-Server 使用哪种框架支持其HTTP协议，并提供了哪些主要功能？", "output_field": "brpc框架。主要功能包括文件上传，数据导入，导入进度查询，cypher查询，文件删除。"}
{"id": "TEST1-146", "input_field": "禁用角色后，具有该角色的用户会如何受影响？", "output_field": "具有该角色的用户将不再从该角色中获得任何权限。"}
{"id": "TEST1-147", "input_field": "如果您作为公司员工提交贡献内容，应如何保证合法授权？", "output_field": "您需保证依法有权授予许可，并确保提交的贡献内容包括所有您个人所知悉且与贡献内容相关的第三方许可或其他限制（如相关专利或商标）的完整细节。此外，应确认公司授权您代表公司提交这些贡献内容。"}
{"id": "TEST1-148", "input_field": "如何只清空数据，而保留schema？", "output_field": "CALL db.dropAllVertex()"}
{"id": "TEST1-149", "input_field": "OGM在哪些方面类似于MyBatis？", "output_field": "OGM和MyBatis都提供对象关系映射功能，允许开发人员在熟悉的面向对象编程环境中操作数据库。OGM将Java对象映射到图数据库中的节点、边及其属性上，而MyBatis则用于将Java对象与关系型数据库表进行映射。两者都支持通过配置文件或注解定义映射规则，并提供了便捷的数据访问方法。"}
{"id": "TEST1-150", "input_field": "BROWSER 有 docker 部署么？", "output_field": "有，使用以下命令启动包含BROWSER的TuGraph服务：\ndocker run -d -p 7070:7070 -p 7687:7687 -p 9090:9090 -v /root/tugraph/data:/var/lib/lgraph/data -v /root/tugraph/log:/var/log/lgraph_log --name tugraph_demo tugraph/tugraph-runtime-centos7\n访问地址：http://x.x.x.x:7070，默认用户名admin，密码73@TuGraph。首次登录需修改密码。"}
{"id": "TEST1-151", "input_field": "TuGraph-DB是否有数据导入工具？相关代码在哪里？", "output_field": "有数据导入工具lgraph_import。相关代码在TuGraph-DB的安装目录下可以找到。"}
{"id": "TEST1-152", "input_field": "图数据库相比关系型数据库有哪些独特的优势？", "output_field": "图数据库相比关系型数据库的独特优势包括：\n- 更高效的关联关系处理性能\n- 更好的兼容性和灵活性，适应数据格式变化\n- 直观性更强，自然表达现实世界的关系"}
{"id": "TEST1-153", "input_field": "TuGraph 产品架构中，客户端 SDK 支持哪些编程语言？", "output_field": "Java、Python、C++"}
{"id": "TEST1-154", "input_field": "OGC定义了哪些空间数据的标准表示格式？", "output_field": "WKT, WKB"}
{"id": "TEST1-155", "input_field": "db.importor.dataImportor函数的目的是什么？", "output_field": "导入点或边数据"}
{"id": "TEST1-156", "input_field": "TuGraph企业版是什么？", "output_field": "TuGraph企业版是商业化解决方案，支持分布式集群架构、一站式图平台、在线/近线/离线图计算引擎、流式及大数据类数据源接入、多地多中心部署和专家支持服务。"}
{"id": "TEST1-157", "input_field": "请求存储过程列表时，应该使用哪种HTTP方法和URI？", "output_field": "GET\n/db/{graph_name}/cpp_plugin|python_plugin"}
{"id": "TEST1-158", "input_field": "TuGraph基础算法包包含哪些算法？", "output_field": "广度优先搜索、网页排序、单源最短路径、弱连通分量、平均集聚系数、标签传播。"}
{"id": "TEST1-159", "input_field": "REST 服务器的默认端口号是多少？", "output_field": "7070"}
{"id": "TEST1-160", "input_field": "如果需要对一个角色进行禁用，调用何种函数，并且该函数在何种情况下返回true？", "output_field": "调用dbms.security.disableRole函数，参数为role::STRING, disable::BOOLEAN。当disable设为true时禁用角色，函数执行成功返回true。"}
{"id": "TEST1-161", "input_field": "TuGraph更新之后，原库的数据会丢吗？", "output_field": "不会，更新TuGraph时原库数据不会丢失。如果需要迁移数据，可以使用备份恢复或导出导入的方式进行迁移。"}
{"id": "TEST1-162", "input_field": "如果节点中未包含属性\"belt\"，应该返回什么值？", "output_field": "false"}
{"id": "TEST1-163", "input_field": "磁盘IO警报是在什么情况下触发的？", "output_field": "磁盘IO超过10MB/S时触发警报。"}
{"id": "TEST1-164", "input_field": "调用 Close() 函数后 InEdgeIterator 的状态是怎样的？", "output_field": "调用 Close() 函数后 InEdgeIterator 变为无效状态。"}
{"id": "TEST1-165", "input_field": "DUAL_DIRECTION表示什么？", "output_field": "DUAL_DIRECTION表示输入文件为非对称图，加载图为非对称图。"}
{"id": "TEST1-166", "input_field": "当指定的顶点ID不存在，并且nearest参数为true时，Goto函数将如何处理？", "output_field": "Goto函数会移动到ID不小于且最接近指定顶点ID的顶点。"}
{"id": "TEST1-167", "input_field": "在BFS算法中，最终返回的结果是什么？", "output_field": "discovered_vertices"}
{"id": "TEST1-168", "input_field": "TuGraph“refresh_time”的默认设置是什么？", "output_field": "0"}
{"id": "TEST1-169", "input_field": "GetEdgeProp命令中，如果要查找特定的时间戳的边属性，该如何指定timestamp字段？", "output_field": "指定timestamp字段需使用TemporalId参数。"}
{"id": "TEST1-170", "input_field": "使用TuGraph Browser时，默认的端口号是多少？", "output_field": "7070"}
{"id": "TEST1-171", "input_field": "TuGraph-DB是否支持运行图算法？是否有示例图算法可以参考？", "output_field": "支持。可以参考BFS算法示例。"}
{"id": "TEST1-172", "input_field": "Python存储过程接口包含哪些重要组件和功能？", "output_field": "Python Procedure API, Traversal API, OLAP API。Python Procedure API 提供了C++ Procedure API的跨语言封装，牺牲一定性能换取易用性；Traversal API支持并行执行；OLAP API提供高并发快速点边操作框架，支持图分析任务完成后数据写回图数据库。"}
{"id": "TEST1-173", "input_field": "当执行 CallGql 函数时，如果操作成功和失败分别返回什么？", "output_field": "成功返回True，失败返回False。"}
{"id": "TEST1-174", "input_field": "TuGraph 中复杂图分析操作如何执行？", "output_field": "复杂图分析操作需要额外导出快照执行，通常涉及全图的多轮数据迭代操作。可以使用OLAP API针对这类操作进行处理。"}
{"id": "TEST1-175", "input_field": "filter_output_default函数的主要作用是什么？", "output_field": "默认情况下，filter_output_default函数返回true，允许所有VertexData类型的值通过过滤。"}
{"id": "TEST1-176", "input_field": "在Java运行时，MyBatis Generator的XML配置文件应如何配置targetProject？", "output_field": "targetProject配置为生成文件的目标目录路径。"}
{"id": "TEST1-177", "input_field": "在给定的代码中，`@Property(\"class\")`注解指定了什么数据库字段名？", "output_field": "给定代码中未直接提到`@Property(\"class\")`注解及其指定的数据库字段名。根据通常的使用情况，该注解指定了\"class\"作为数据库中的字段名，但具体到这个场景需要具体的代码示例来确定。当前提供的信息不足以给出明确答案。"}
{"id": "TEST1-178", "input_field": "在tugraph中是否能通过cypher语句删除图中的重复关系？", "output_field": "可以，通过编写合适的Cypher语句来识别并删除重复的关系。"}
{"id": "TEST1-179", "input_field": "在默认情况下，第一次快照的时间如何设置？", "output_field": "默认情况下，第一次快照的时间设置为在0-ha_snapshot_interval_s内的任一时刻随机打第一次snapshot。对应的参数是ha_first_snapshot_start_time，默认值为空字符串(\"\")。"}
{"id": "TEST1-180", "input_field": "如果您想提交非原创作品给蚂蚁集团，您需要标注哪些信息？", "output_field": "标注作品的完整来源、您个人所知悉的任何许可或其他限制（包括但不限于相关专利、商标和许可协议），并显著标明该作品属于“以第三方名义提交：【填写姓名】”。"}
{"id": "TEST1-181", "input_field": "web端导入点数据后，不同的方式查询得到结果不同", "output_field": "web端导入点数据后，可以使用语句查询、路径查询、点查询等多种模式查询图数据，不同查询方式返回的结果形式可能不同。具体展示包括表格文本和点边视图等形式。"}
{"id": "TEST1-182", "input_field": "对象图映射（OGM）支持什么？", "output_field": "对象图映射（OGM）支持将JAVA对象（POJO）映射到TuGraph中，具体包括：类映射为节点、集合映射为边、属性映射为图对象的属性，并提供函数操作图数据库。"}
{"id": "TEST1-183", "input_field": "如何在单节点模式下实例化liblgraph_client_python.client对象？", "output_field": "url, user, password"}
{"id": "TEST1-184", "input_field": "如果传递给 `GetRoleInfo` 函数的角色名非法，会抛出哪种异常？", "output_field": "std::exception"}
{"id": "TEST1-185", "input_field": "TuGraph 的部署方式有哪些？", "output_field": "云部署、Docker部署、安装包部署"}
{"id": "TEST1-186", "input_field": "根据使用MATCH和SKIP语句的查询结果，跳过第一行后返回的第一位人物的名字是什么？", "output_field": "Corin Redgrave"}
{"id": "TEST1-187", "input_field": "导入数据时，如果操作失败，是否可以继续导入？", "output_field": "可以，通过设置continue_on_error参数为true。"}
{"id": "TEST1-188", "input_field": "如果不定义表头并使用空的Result()初始化表，你接下来应该使用什么方法为表设置表头？", "output_field": "ResetHeader"}
{"id": "TEST1-189", "input_field": "蚂蚁集团的个人贡献者许可协议主要目的是什么？", "output_field": "厘清个人贡献内容所授予的知识产权许可。"}
{"id": "TEST1-190", "input_field": "TuGraph Mini Runtime Image 不包含哪些功能？", "output_field": "不包含Java、Python相关功能，无C++ plugin编译运行，仅支持so上传。"}
{"id": "TEST1-191", "input_field": "OlapOnDB API文档中介绍的Procedure及Embed主要使用了哪些辅助函数？", "output_field": "OlapOnDB类中的辅助函数"}
{"id": "TEST1-192", "input_field": "在尝试为用户设置新密码时，哪些异常可能会被抛出？", "output_field": "可能会抛出std::exception异常。"}
{"id": "TEST1-193", "input_field": "如何使用 liblgraph_python_api.Galaxy 类创建一个新的用户账户？", "output_field": "需要以下参数：name, password, desc"}
{"id": "TEST1-194", "input_field": "调用liblgraph_python_api.GraphDB的哪个方法可以删除一个顶点标签？", "output_field": "DeleteVertexLabel"}
{"id": "TEST1-195", "input_field": "角色被禁用后，用户将从该角色中获得什么权限？", "output_field": "角色被禁用后，用户将不再从该角色中获得任何权限。"}
{"id": "TEST1-196", "input_field": "TuGraph的可视化监控主要使用了哪些软件？", "output_field": "TuGraph Monitor, Prometheus, Grafana"}
{"id": "TEST1-197", "input_field": "TuGraph 服务在哪个文件中读取其配置？", "output_field": "lgraph.json"}
{"id": "TEST1-198", "input_field": "该接口`StudentMapper`中`selectVertex`方法的超时设置是多少毫秒？", "output_field": "接口`StudentMapper`中`selectVertex`方法的超时设置没有直接给出。基于提供的信息，无法确定具体的超时值。如果使用默认配置，当timeout参数未明确设置或设为非正值时，会使用最大可能值：`std::numeric_limits<int64_t>::max()`。对于具体毫秒数值，默认情况下该值极大，实际应用中超时时间应根据实际情况通过`timeout`参数指定。"}
{"id": "TEST1-199", "input_field": "PathTraversal 类中展开当前前沿的操作可以使用哪些类型的过滤函数？", "output_field": "out_edge_filter, in_edge_filter, out_neighbour_filter, in_neighbour_filter"}
{"id": "TEST1-200", "input_field": "当在只读交易中调用函数时，会抛出哪种异常？", "output_field": "WriteNotAllowed"}
{"id": "TEST1-201", "input_field": "UDF的支持中，如果开发的函数的语言是Python，模块通常放在什么位置？", "output_field": "模块通常放在plugin_dir目录下。"}
{"id": "TEST1-202", "input_field": "在文本中，哪种资源名称对应的颜色设置为固定的“light-orange”？", "output_field": "graph_used, available"}
{"id": "TEST1-203", "input_field": "导入图库的数据如何删除", "output_field": "使用`GraphDB::DropAllData()`方法删除图库中的所有数据。"}
{"id": "TEST1-204", "input_field": "当使用 TuGraph 批量创建边时，如果请求成功，响应中将返回什么内容？", "output_field": "新建立的边的 euid 列表。"}
{"id": "TEST1-205", "input_field": "TuGraph为什么选择使用B+树作为其底层存储数据结构？", "output_field": "TuGraph选择B+树作为底层存储数据结构，因为B+树具有较均衡的读写性能，适合实时的增删查改事务，并且在顺序读写方面表现较好。相比LSM树，B+树避免了因后台合并导致的性能波动难以预期的问题，降低了整体设计成本。"}
{"id": "TEST1-206", "input_field": "接口 \"CallProcedureToLeader\" 支持哪些参数设置以改变返回结果的格式？", "output_field": "json_format"}
{"id": "TEST1-207", "input_field": "如何提高查询效率？", "output_field": "创建索引，使用紧凑编码存储数据，优化查询计划。"}
{"id": "TEST1-208", "input_field": "FieldData 类中的 integer() 方法在什么情况下会抛出 std::bad_cast 异常？", "output_field": "当 FieldData 对象的类型不是整数时，调用 integer() 方法会抛出 std::bad_cast 异常。"}
{"id": "TEST1-209", "input_field": "TuGraph-DB的存储引擎用了kv数据库么？如果是，基于什么kv数据库构建的？", "output_field": "TuGraph-DB的存储引擎使用了KV数据库，基于LMDB构建。"}
{"id": "TEST1-210", "input_field": "请问下怎么没找到新版的browser-resource，怎么进行新旧版本的web切换呢", "output_field": "进入容器，修改配置文件\"/usr/local/etc/lgraph.json\"中的\"web\"参数。对于老版本，设为\"/usr/local/share/lgraph/resource\"；对于新版本，设为\"/usr/local/share/lgraph/browser-resource\"。完成后执行 docker restart tugraph 使更改生效。"}
{"id": "TEST1-211", "input_field": "tugraph进行大规模数据查询时是否对图数据进行了压缩？", "output_field": "TuGraph在备份过程中通过compaction使产生的备份文件更紧凑，但未明确说明在大规模数据查询时对图数据进行压缩。"}
{"id": "TEST1-212", "input_field": "TuGraph选择使用哪一种树结构作为其存储数据结构，并简述选择这种结构的主要原因是什么？", "output_field": "TuGraph选择B+树作为存储数据结构。主要原因是B+树有较好的顺序读写性能，且在实时增删查改事务中表现均衡。"}
{"id": "TEST1-213", "input_field": "TuGraph-DB使用的boost库是什么版本？", "output_field": "具体版本未在文档中明确给出，需参见tugraph-db源码目录 ci/images/tugraph-runtime-*-Dockerfile查看。"}
{"id": "TEST1-214", "input_field": "TuGraph适合哪些类型的用户？", "output_field": "新手、系统开发者、生产运维人员、研究人员。"}
{"id": "TEST1-215", "input_field": "TuGraph的REST API中，POST请求主要用途是什么？", "output_field": "POST请求用于创建实体，提交Cypher，以及加载和调用存储过程。"}
{"id": "TEST1-216", "input_field": "安装部署TuGraph外存配置的最低和建议分别是多少？", "output_field": "最低配置100GB，建议配置为实际数据大小的4倍。"}
{"id": "TEST1-217", "input_field": "在创建一个TuGraph数据库时，如果指定的目录不存在，构造函数会如何处理？", "output_field": "create_if_not_exist参数为true时，会创建数据库目录。"}
{"id": "TEST1-218", "input_field": "VertexIterator 的 GetNumOutEdges 方法默认的 n_limit 参数值是多少？", "output_field": "std::numeric_limits<size_t>::max()"}
{"id": "TEST1-219", "input_field": "试图加入高可用集群时节点的默认等待秒数是多少？", "output_field": "10"}
{"id": "TEST1-220", "input_field": "生成Mapper接口的时候，XMLMAPPER类型将如何实现接口方法？", "output_field": "XMLMAPPER类型通过定义SQL映射文件来实现接口方法，每个方法对应一个ID相同的SQL语句。"}
{"id": "TEST1-221", "input_field": "GCN模型的主要组成部分是什么？", "output_field": "GCN模型的主要组成部分包括：\n- 两层GraphConv\n- Dropout层"}
{"id": "TEST1-222", "input_field": "TuGraph-DB的单元测试使用的是什么框架？", "output_field": "gtest"}
{"id": "TEST1-223", "input_field": "tugraph-db可以先用cypher找一个子图，然后在这个子图上跑图分析吗？例如pagerank、kcore什么的！", "output_field": "可以。使用Traversal API导出子图，然后利用OLAP API在子图上运行如PageRank、KCore等算法。"}
{"id": "TEST1-224", "input_field": "HA集群的snapshot何时删除？", "output_field": "文档中没有提到HA集群的snapshot何时被删除。仅提供了生成snapshot的方法和配置参数，但未说明snapshot的删除机制。"}
{"id": "TEST1-225", "input_field": "TuGraph-DB目前支持哪种查询语言，并计划在将来支持哪种查询语言？", "output_field": "目前支持OpenCypher、ISO GQL。计划将来完善对GQL的支持。"}
{"id": "TEST1-226", "input_field": "语句里面有没有开启事务和结束事务的关键字", "output_field": "没有提到具体语句，基于提供的知识库信息，开启和结束事务通常通过方法调用实现，如CreateReadTxn, CreateWriteTxn开始事务，事务对象的析构或特定方法调用来结束事务，并非使用SQL风格的关键字。"}
{"id": "TEST1-227", "input_field": "如何使用命令创建一个新的角色，并为其提供描述信息？", "output_field": "使用`CreateRole`命令，需要参数name和desc。"}
{"id": "TEST1-228", "input_field": "TuGraph查询语句不支持任意长度路径吧？", "output_field": "支持，使用`*..*`查询任意长度路径。"}
{"id": "TEST1-229", "input_field": "如果在Java运行时，targetProject在xml配置文件中应如何配置？", "output_field": "无需直接配置targetProject。根据提供的XML片段，确保正确设置`<ProjectGuid>`, `<StartupFile>`, `<WorkingDirectory>`, `<OutputPath>`等相关属性即可。"}
{"id": "TEST1-230", "input_field": "2024年功能更新计划中支持什么角色和工具？", "output_field": "HA支持Witness角色和管理工具"}
{"id": "TEST1-231", "input_field": "调用 \"CallGql\" 接口时，如何指定要查询的图的名称？", "output_field": "graph"}
{"id": "TEST1-232", "input_field": "图中能把属性值展示出来吗？", "output_field": "可以，在图分析的右边栏展示选中点或边的属性信息。"}
{"id": "TEST1-233", "input_field": "tugraph-db如何与neo4j驱动连接？", "output_field": "使用Neo4j的Bolt驱动连接TuGraph-DB。添加Maven依赖：\n\n```xml\n<dependency>\n  <groupId>org.neo4j.driver</groupId>\n  <artifactId>neo4j-java-driver</artifactId>\n  <version>4.4.2</version>\n</dependency>\n```\n\n实例化Client：\n\n```java\nDriver driver = GraphDatabase.driver(\"bolt://ip:port\", AuthTokens.basic(\"admin\", \"73@TuGraph\"));\n```"}
{"id": "TEST1-234", "input_field": "图模型中某些边设置了属性，这些有属性的边在导入数据之后进行查询，发现查不到这些边数据", "output_field": "检查数据文件中的属性映射是否正确设置，确保数据列与边的属性字段相对应。同时确认在导入过程中没有跳过含有边属性的数据行。"}
{"id": "TEST1-235", "input_field": "在\"TuGraph-DataX\"项目中如何通过job配置文件将\"actors.csv\"导入到TuGraph？", "output_field": "{\n\"job\": {\n\"setting\": {\n\"speed\": {\n\"channel\": 1\n}\n},\n\"content\": [\n{\n\"reader\": {\n\"name\": \"txtfilereader\",\n\"parameter\": {\n\"path\": [\"actors.csv\"],\n\"encoding\": \"UTF-8\",\n\"column\": [\n{\n\"index\": 0,\n\"type\": \"string\"\n},\n{\n\"index\": 1,\n\"type\": \"string\"\n}\n],\n\"fieldDelimiter\": \",\"\n}\n},\n\"writer\": {\n\"name\": \"tugraphwriter\",\n\"parameter\": {\n\"url\": \"bolt://127.0.0.1:27687\",\n\"username\": \"admin\",\n\"password\": \"73@TuGraph\",\n\"graphName\": \"default\",\n\"labelType\": \"VERTEX\",\n\"labelName\": \"actor\",\n\"batchNum\": 1000,\n\"properties\": [\"aid\", \"name\"]\n}\n}\n}\n]\n}"}
{"id": "TEST1-236", "input_field": "创建新子图时需要哪些参数？", "output_field": "name, config"}
{"id": "TEST1-237", "input_field": "在test_export_default函数中，如何验证导出后再次导入的数据是否与原始数据一致？", "output_field": "通过client调用Cypher查询`MATCH (n) RETURN n LIMIT 100`，然后断言返回结果长度是否为21来验证。"}
{"id": "TEST1-238", "input_field": "Work函数在处理节点vi时，返回值代表什么？", "output_field": "work函数在处理节点vi时，返回值代表对节点vi执行特定操作后的结果。"}
{"id": "TEST1-239", "input_field": "TuGraph Explorer 的功能现在在哪里可以找到？", "output_field": "TuGraph Explorer 的功能已经合并到 TuGraph Browser。"}
{"id": "TEST1-240", "input_field": "在批量创建点的操作中，如果请求成功，TuGraph 会返回什么？", "output_field": "200 OK 和新增加的点的 vid 列表。"}
{"id": "TEST1-241", "input_field": "tugraph能否支持混合检索 vector+知识图谱？", "output_field": "TuGraph计划在2024年12月支持向量化。结合其现有的图数据库功能，可以实现混合检索vector+知识图谱的能力。"}
{"id": "TEST1-242", "input_field": "TuGraph 数据预热的主要目的是什么？", "output_field": "改善服务器刚开启后由于频繁的IO操作导致的性能变差问题。"}
{"id": "TEST1-243", "input_field": "InEdgeIterator 类的 GetSrc 方法返回什么信息？", "output_field": "源顶点的ID"}
{"id": "TEST1-244", "input_field": "可选匹配子句OPTIONAL MATCH在查询中有什么作用？", "output_field": "OPTIONAL MATCH匹配图模式，如果未命中，则返回null。"}
{"id": "TEST1-245", "input_field": "GraphDB 实例无法使用的情况是什么？", "output_field": "!db_"}
{"id": "TEST1-246", "input_field": "TuGraph 运行需要保证哪个库文件的位置在环境变量 LD_LIBRARY_PATH 中？", "output_field": "liblgraph.so"}
{"id": "TEST1-247", "input_field": "GetNumOutEdges函数如何在达到限制时响应？", "output_field": "返回一个包含出边数量和一个布尔值的元组，布尔值指示是否超过了限制。参数: n_limit, more_to_go"}
{"id": "TEST1-248", "input_field": "文本中的 BFS 算法在每次迭代中怎样更新活跃顶点数量？", "output_field": "每次迭代中，通过`num_activations`变量更新活跃顶点数量。对每个节点处理其出边时，如果邻居节点未被访问（即`parent[dst] == (size_t)-1`），则将其加入到`active_out`集合，并使`num_activations`加1。"}
{"id": "TEST1-249", "input_field": "角色名的允许的最大长度是多少字节？", "output_field": "64字节"}
{"id": "TEST1-250", "input_field": "URIs 用于修改和启用角色的 HTTP 方法是什么？", "output_field": "修改角色描述：PUT /role/{role_name}/description\n启用角色：POST /role/{role_name}/enable"}
